// Copyright (c) 2025 by OpenTier GmbH
// SPDX‑FileCopyrightText: 2025 OpenTier GmbH
// SPDX‑License‑Identifier: MIT
//
// This file is part of OpenTier.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

syntax = "proto3";

package vehicle_cloud_events;

message SpeedEvent {
  string vehicle_id = 1;
  float speed = 2;
}

message SystemStateEvent {
  string vehicle_id = 1;
  string system_state = 2;
}

message CurrentLocationEvent {
  string vehicle_id = 1;
  double altitude = 2;
  double latitude = 3;
  double longitude = 4;
  string timestamp = 5;
}

message TirePressure {
  bool is_pressure_low = 1;
  uint32 pressure = 2;
  float temperature = 3;
}

message TirePressureEvent {
  string vehicle_id = 1;
  TirePressure front_tire = 2;
  TirePressure rear_tire = 3;
}

message ExteriorEvent {
  string vehicle_id = 1;
  float air_temperature = 2;
  float humidity = 3;
  float light_intensity = 4;
}

message TripDataEvent {
  string vehicle_id = 1;
  string start_time = 2;
  float traveled_distance = 3;
  float traveled_distance_since_start = 4;
  float trip_duration = 5;
  float trip_meter_reading = 6;
  float average_speed = 7;
}

message BatteryEvent {
  string vehicle_id = 1;
  bool is_charging = 2;  // Derived from VehiclePowertrainTractionBatteryCharging.IsCharging
  bool is_discharging = 3;  // Derived from VehiclePowertrainTractionBatteryCharging.IsDischarging
  uint32 time_to_fully_charge = 4;  // Derived from VehiclePowertrainTractionBatteryCharging.TimeToComplete
  uint32 estimated_range = 5;  // Derived from VehiclePowertrainTractionBattery.Range
  float battery_level = 6;  // Derived from VehiclePowertrainTractionBatteryStateOfCharge.Displayed
  float state_of_health = 7;  // Derived from VehiclePowertrainTractionBattery.StateOfHealth
  float temperature = 8;  // Derived from VehiclePowertrainTractionBatteryTemperature.Average
}